# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: casbin_test
          MYSQL_DATABASE: casbin
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build
          ./gradlew check
          ./gradlew codeCoverageReport

      - name: Deploy
        uses: reznikmm/upload-bintray-action@v4
        with:
            subject: casbin
            repository: casbin-spring-boot-starter
            package: casbin-spring-boot-starter
            version: 0.0.13
            sourcePath: '*.tar.gz'
            override: 0
            username: fangzhengjin
            apiKey: JhRcO7gf0NQV2pYbfkCC/ZgL857xNzRkvF8kxdX8/AHLA7tKmGF37ndrvWZ4AhMW1/YdLriJVxda4sXyD8Zbw15X0B1fpGPp5z0KZU6Q07/+jAUZrSEbevwp3Vbe0ks9CcoUFLsFa6y04SYiBHrHj324wkLrgEi7aExhwxY20mOVRRq5xR13d3rQBjbyCs6zkdffQD+5il+ySVdKjl0oxaIJBi3AqkcTkU3GlPy1blKvzblrecY6nBtcLoWScPdHfqH8EsB8srAZ5M/bC0E1I0TO1QkEFlBxHyF9VbSgxzKxbdTcGYuR/uBQkDp73PSDeoayUW5wtObL/3LNnF6yHS+TXE265TARzyUg27J7O0sGsTkB147SbTa8u48h0gqpTI9iGzB1x4BzGTIpJeNe+69dHSdO0rJOrsEoSiQ2o/ch45y6pE5yD3LIht70EUsUav19FOLXdOD0cNgJkB7SV7HBGnvJ+u06yoq4G2zjGTQpht7cOfd/hXP8D9tBMmi3kGcEZPUXZHN6OCqWjURNMgRErLR+ILdQfGXz1FV9n3IhUHc26MvwvWNKnzpi0X1Iio28na9MMp7ceKlyptMBBeyHt5w/lEFOfzGqJAbooLtMpDzsw1/wCseSLhIH2er7afr0HjFw8bMuSftwCE7iitGhHwlyLrw8EZEPRUdzvio=